using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp3
{
    [Serializable]
    class Student
    {
        public String Sname, Grade;
        public int Regno, Mark1, Mark2, Mark3, Total;
        public float Average;
    }
    class Program
    {
        private static string serializationFile;

        static void Main(string[] args)
        {
            int choice;
            serializationFile = Path.Combine(Environment.CurrentDirectory, @"Student.txt");
            do
            {
                Console.WriteLine("Choices");
                Console.WriteLine("*******");
                Console.WriteLine("1: Write Details");
                Console.WriteLine("2: Display Details");
                Console.WriteLine("Enter the Choice");
                choice = int.Parse(Console.ReadLine());

                List<Student> StuObj = new List<Student>();
                switch (choice)
                {
                    case 1:
                        GetDetails(StuObj);
                        serializationFile = WriteDetails(StuObj);
                        Console.WriteLine("Successful");
                        break;
                    case 2:
                        DisplayDetails();
                        // Console.ReadLine();
                        break;
                    default:
                        Console.WriteLine("Thank You");
                        break;
                }
            } while (choice > 0 && choice <= 2);
            Console.ReadLine();
        }

        private static void DisplayDetails()
        {
            //deserialize or read
            List<Student> student;
            using (Stream stream = File.Open(serializationFile, FileMode.Open))
            {
                var bformatter = new System.Runtime.Serialization.Formatters.Binary.BinaryFormatter();
                student = (List<Student>)bformatter.Deserialize(stream);
                Console.WriteLine("==================================================================================");
                Console.WriteLine("Regno.    Name          Mark 1   Mark 2    Mark 3   Total    Average    Grade");
                foreach (var item in student)
                {

             
                    Console.WriteLine(item.Regno + "     " + item.Sname + "        " + item.Mark1 + "         " + item.Mark2 + "       " + item.Mark3 + "        " + item.Total + "       " + item.Average + "       " + item.Grade);
                    
                }
                Console.WriteLine("==================================================================================");
            }

            Console.WriteLine("**********   Have a Great Day   **********");
        }
        
        private static string WriteDetails(List<Student> StuObj)
        {
            //serialize or write
            using (Stream stream = File.Open(serializationFile, FileMode.Create))
            {
                var bformatter = new System.Runtime.Serialization.Formatters.Binary.BinaryFormatter();
                bformatter.Serialize(stream, StuObj);
            }
            return serializationFile;
        }

        private static void GetDetails(List<Student> StuObj)
        {
            String Proceed = string.Empty;
            int i = 1001;
            do
            {
                Student newstu = new Student();
                Console.WriteLine("Enter the Name");
                newstu.Sname = Console.ReadLine();

                Console.WriteLine("Enter the Mark 1");
                newstu.Mark1 = int.Parse(Console.ReadLine());
                Console.WriteLine("Enter the Mark 2");
                newstu.Mark2 = int.Parse(Console.ReadLine());
                Console.WriteLine("Enter the Mark 3");
                newstu.Mark3 = int.Parse(Console.ReadLine());

                newstu.Regno = i++;
                newstu.Total = newstu.Mark1 + newstu.Mark2 + newstu.Mark3;
                newstu.Average = newstu.Total / 3;
                if (newstu.Average > 95)
                    newstu.Grade = "S";
                else if (newstu.Average > 90)
                    newstu.Grade = "A";
                else if (newstu.Average > 80)
                    newstu.Grade = "B";
                else if (newstu.Average > 70)
                    newstu.Grade = "C";
                else if (newstu.Average > 60)
                    newstu.Grade = "D";
                else if (newstu.Average > 49)
                    newstu.Grade = "E";
                else
                    newstu.Grade = "Fail";
                StuObj.Add(newstu);

                Console.WriteLine("Do you want to continue, Yes or No?");
                Proceed = Console.ReadLine();
            } while (Proceed.Trim().ToLower().Equals("yes"));
        }
    }
}
